DACHE TCP LOW LEVEL LANGUAGE SYNTAX:

get cacheKey1 cacheKey2 cacheKey3 cacheKey4...
get-tag tagName
set cacheKey1 serializedObject1 cacheKey2 serializedObject2
set absoluteExpiration cacheKey1 serializedObject1 cacheKey2 serializedObject2
set slidingExpiration cacheKey1 serializedObject1 cacheKey2 serializedObject2
set-intern cacheKey1 serializedObject1 cacheKey2 serializedObject2
set-tag tagName cacheKey1 serializedObject1 cacheKey2 serializedObject2
set-tag tagName absoluteExpiration cacheKey1 serializedObject1 cacheKey2 serializedObject2
set-tag tagName slidingExpiration cacheKey1 serializedObject1 cacheKey2 serializedObject2
set-tag-intern tagName cacheKey1 serializedObject1 cacheKey2 serializedObject2
del cacheKey1 cacheKey2 cacheKey3 cacheKey4...
del-tag tagName1 tagName2 tagName3 tagName4...

-Offer both IIS hosting and classic Service hosting
-Clear tag from TagRoutingTable memory when removing all tagged items from host
-Chained updates: like tagging, mark cache keys for chaining and when you update the value of an object, it updates it for all of the cache keys
-Introduce of Sorted Sets/Lists with weights
-Create integer storage methods and increment/decrement methods?
-Azure host
-Build NHibernate second level cache provider plugin