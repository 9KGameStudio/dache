<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dache.Client</name>
    </assembly>
    <members>
        <member name="T:Dache.Communication.ClientToCache.IClientToCacheContract">
            <summary>
            Represents the communication contract between a cache client and a cache host.
            </summary>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.Get(System.String)">
            <summary>
            Gets the serialized object stored at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <returns>The serialized object.</returns>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.GetMany(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Gets the serialized objects stored at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
            <param name="isClientRequest">Whether or not the request is from a client.</param> 
            <returns>A list of the serialized objects.</returns>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.GetTagged(System.String,System.Boolean)">
            <summary>
            Gets all serialized objects associated with the given tag name.
            </summary>
            <param name="tagName">The tag name.</param>
            <param name="isClientRequest">Whether or not the request is from a client.</param>
            <returns>A list of the serialized objects.</returns>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdate(System.String,System.Byte[])">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdate(System.String,System.Byte[],System.DateTimeOffset)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdate(System.String,System.Byte[],System.TimeSpan)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}})">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.DateTimeOffset)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.TimeSpan)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateTagged(System.String,System.Byte[],System.String)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key and associates it with the given tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateTagged(System.String,System.Byte[],System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key and associates it with the given tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateTagged(System.String,System.Byte[],System.String,System.TimeSpan)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key and associates it with the given tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateManyTagged(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.String)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateManyTagged(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.AddOrUpdateManyTagged(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.String,System.TimeSpan)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.Remove(System.String)">
            <summary>
            Removes the serialized object at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.RemoveMany(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the serialized objects at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
        </member>
        <member name="M:Dache.Communication.ClientToCache.IClientToCacheContract.RemoveTagged(System.String,System.Boolean)">
            <summary>
            Removes all serialized objects associated with the given tag name.
            </summary>
            <param name="tagName">The tag name.</param>
            <param name="isClientRequest">Whether or not the request is from a client.</param>
        </member>
        <member name="T:Dache.Core.Logging.EventViewerLogger">
            <summary>
            Logs messages and exceptions to the windows event viewer. Thread safe.
            </summary>
        </member>
        <member name="T:Dache.Core.Logging.ILogger">
            <summary>
            Represents a logger. You can implement this interface to inject your own custom logging into a Dache client. Your implementation should be thread safe.
            </summary>
        </member>
        <member name="M:Dache.Core.Logging.ILogger.Info(System.String,System.String)">
            <summary>
            Logs an information level message.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dache.Core.Logging.ILogger.Warn(System.String,System.String)">
            <summary>
            Logs a warning level message.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dache.Core.Logging.ILogger.Warn(System.String,System.Exception)">
            <summary>
            Logs a warning level exception.
            </summary>
            <param name="prependedMessage">The message to prepend to the exception.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Dache.Core.Logging.ILogger.Warn(System.Exception)">
            <summary>
            Logs a warning level exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Dache.Core.Logging.ILogger.Error(System.String,System.String)">
            <summary>
            Logs an error level message.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dache.Core.Logging.ILogger.Error(System.String,System.Exception)">
            <summary>
            Logs an error level exception.
            </summary>
            <param name="prependedMessage">The message to prepend to the exception.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Dache.Core.Logging.ILogger.Error(System.Exception)">
            <summary>
            Logs an error level exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.#ctor(System.String,System.String)">
            <summary>
            The constructor.
            </summary>
            <param name="source">The source name by which the application is registered on the local computer.</param>
            <param name="logName">The name of the log the source's entries are written to.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.Info(System.String,System.String)">
            <summary>
            Logs an information level message.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.Warn(System.String,System.String)">
            <summary>
            Logs a warning level message.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.Warn(System.String,System.Exception)">
            <summary>
            Logs a warning level exception.
            </summary>
            <param name="prependedMessage">The message to prepend to the exception.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.Warn(System.Exception)">
            <summary>
            Logs a warning level exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.Error(System.String,System.String)">
            <summary>
            Logs an error level message.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.Error(System.String,System.Exception)">
            <summary>
            Logs an error level exception.
            </summary>
            <param name="prependedMessage">The message to prepend to the exception.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Dache.Core.Logging.EventViewerLogger.Error(System.Exception)">
            <summary>
            Logs an error level exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="T:Dache.Client.Configuration.CacheClientConfigurationSection">
            <summary>
            An application configuration section that allows a user to specify cache client settings.
            </summary>
        </member>
        <member name="P:Dache.Client.Configuration.CacheClientConfigurationSection.Settings">
            <summary>
            The cache host settings.
            </summary>
        </member>
        <member name="P:Dache.Client.Configuration.CacheClientConfigurationSection.HostReconnectIntervalMilliseconds">
            <summary>
            How often to attempt to re-establish the connection to a disconnected cache host, in milliseconds.
            </summary>
        </member>
        <member name="P:Dache.Client.Configuration.CacheClientConfigurationSection.CacheHosts">
            <summary>
            The cache hosts collection.
            </summary>
        </member>
        <member name="T:Dache.Client.Configuration.CacheHostElement">
            <summary>
            Provides a cache host element for configuration.
            </summary>
        </member>
        <member name="P:Dache.Client.Configuration.CacheHostElement.Address">
            <summary>
            The cache host address.
            </summary>
        </member>
        <member name="P:Dache.Client.Configuration.CacheHostElement.Port">
            <summary>
            The cache host port.
            </summary>
        </member>
        <member name="T:Dache.Client.Configuration.CacheHostsCollection">
            <summary>
            Provides a configuration collection of cache host elements.
            </summary>
        </member>
        <member name="M:Dache.Client.Configuration.CacheHostsCollection.CreateNewElement">
            <summary>
            Creates a new cache host element.
            </summary>
            <returns>A new cache host element.</returns>
        </member>
        <member name="M:Dache.Client.Configuration.CacheHostsCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the key of a given configuration element.
            </summary>
            <param name="element">The configuration element.</param>
            <returns>The key.</returns>
        </member>
        <member name="P:Dache.Client.Configuration.CacheHostsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the cache host element for the given index.
            </summary>
            <param name="index">The index of the cache host element to get or set.</param>
            <returns>The cache host element.</returns>
        </member>
        <member name="P:Dache.Client.Configuration.CacheHostsCollection.Item(System.String)">
            <summary>
            Gets or sets the cache host element for the given name.
            </summary>
            <param name="name">The name of the cache host element to get or set.</param>
            <returns>The cache host element.</returns>
        </member>
        <member name="P:Dache.Client.Configuration.CacheHostsCollection.Count">
            <summary>
            Gets the number of cache host elements.
            </summary>
        </member>
        <member name="T:Dache.Client.Exceptions.NoCacheHostsAvailableException">
            <summary>
            Thrown when no cache hosts are available.
            </summary>
        </member>
        <member name="M:Dache.Client.Exceptions.NoCacheHostsAvailableException.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="M:Dache.Client.Exceptions.NoCacheHostsAvailableException.#ctor(System.String)">
            <summary>
            The constructor.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dache.Client.Exceptions.NoCacheHostsAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            The constructor.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Dache.Client.Exceptions.NoCacheHostsAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            The constructor.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:Dache.Client.Plugins.OutputCache.DacheMvcChildActionCache">
            <summary>
            The Dache output cache provider for MVC child action caching.
            TODO: make more generic, so that we also have a MemoryCache provider
            </summary>
        </member>
        <member name="M:Dache.Client.Plugins.OutputCache.DacheMvcChildActionCache.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="T:Dache.Client.Plugins.OutputCache.DacheOutputCacheProvider">
            <summary>
            The Dache output cache provider.
            </summary>
        </member>
        <member name="T:Dache.Client.Plugins.SessionState.DacheSessionState">
            <summary>
            Encapsulates session state information.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.SessionId">
            <summary>
            The session ID.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.ApplicationName">
            <summary>
            The application name.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.Created">
            <summary>
            The datetime at which the object was created.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.Expires">
            <summary>
            The datetime at which the object expires.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.LockDate">
            <summary>
            The datetime at which the object was locked.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.LockId">
            <summary>
            The lock ID.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.Timeout">
            <summary>
            The timeout.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.Locked">
            <summary>
            Whether or not the session state is locked.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.SessionItems">
            <summary>
            The session items.
            </summary>
        </member>
        <member name="P:Dache.Client.Plugins.SessionState.DacheSessionState.Flags">
            <summary>
            The flags.
            </summary>
        </member>
        <member name="T:Dache.Client.Plugins.SessionState.DacheSessionStateProvider">
            <summary>
            The Dache session state provider.
            </summary>
        </member>
        <member name="T:Dache.Client.Serialization.BinarySerializer">
            <summary>
            Serializes and deserializes objects to and from binary. Thread safe.
            </summary>
        </member>
        <member name="T:Dache.Client.Serialization.IBinarySerializer">
            <summary>
            Represents a binary serializer. You can implement this interface to inject your own custom serialization into a Dache client.
            </summary>
        </member>
        <member name="M:Dache.Client.Serialization.IBinarySerializer.Serialize(System.Object)">
            <summary>
            Serializes an object to byte array.
            </summary>
            <param name="value">The object.</param>
            <returns>A byte array of the serialized object, or null if the object was null.</returns>
        </member>
        <member name="M:Dache.Client.Serialization.IBinarySerializer.Deserialize(System.Byte[])">
            <summary>
            Deserializes a byte array into an object.
            </summary>
            <param name="bytes">The byte array.</param>
            <returns>An object, or null if the byte array was null.</returns>
        </member>
        <member name="M:Dache.Client.Serialization.BinarySerializer.Serialize(System.Object)">
            <summary>
            Serializes an object to byte array.
            </summary>
            <param name="value">The object.</param>
            <returns>A byte array of the serialized object, or null if the object was null.</returns>
        </member>
        <member name="M:Dache.Client.Serialization.BinarySerializer.Deserialize(System.Byte[])">
            <summary>
            Deserializes a byte array into an object.
            </summary>
            <param name="bytes">The byte array.</param>
            <returns>An object, or null if the byte array was null.</returns>
        </member>
        <member name="T:Dache.Client.CacheClient">
            <summary>
            The WCF client for cache host communication.
            </summary>
        </member>
        <member name="T:Dache.Client.ICacheClient">
            <summary>
            Represents a cache client.
            TODO: add exception/throws metadata
            </summary>
        </member>
        <member name="M:Dache.Client.ICacheClient.TryGet``1(System.String,``0@)">
            <summary>
            Gets the object stored at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value or default for that type if the method returns false.</param>
            <typeparam name="T">The expected type.</typeparam>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Dache.Client.ICacheClient.GetMany``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the objects stored at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
            <typeparam name="T">The expected type.</typeparam>
            <returns>A list of the objects stored at the cache keys, or null if none were found.</returns>
        </member>
        <member name="M:Dache.Client.ICacheClient.GetTagged``1(System.String)">
            <summary>
            Gets the objects stored at the given tag name from the cache.
            </summary>
            <param name="tagName">The tag name.</param>
            <typeparam name="T">The expected type.</typeparam>
            <returns>A list of the objects stored at the tag name, or null if none were found.</returns>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdate(System.String,System.Object)">
            <summary>
            Adds or updates an object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdate(System.String,System.Object,System.DateTimeOffset)">
            <summary>
            Adds or updates an object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdate(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds or updates an object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateMany(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Adds or updates many objects in the cache at their given cache keys.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateMany(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.DateTimeOffset)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateMany(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.TimeSpan)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateTagged(System.String,System.Object,System.String)">
            <summary>
            Adds or updates an object in the cache at the given cache key with the associated tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateTagged(System.String,System.Object,System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates an object in the cache at the given cache key with the associated tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateTagged(System.String,System.Object,System.String,System.TimeSpan)">
            <summary>
            Adds or updates an object in the cache at the given cache key with the associated tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateManyTagged(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys with the associated tag name.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateManyTagged(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys with the associated tag name.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.AddOrUpdateManyTagged(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String,System.TimeSpan)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys with the associated tag name.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.Remove(System.String)">
            <summary>
            Removes the object at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.RemoveMany(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the objects at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
        </member>
        <member name="M:Dache.Client.ICacheClient.RemoveTagged(System.String)">
            <summary>
            Removes the objects associated to the given tag name from the cache.
            </summary>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="E:Dache.Client.ICacheClient.HostDisconnected">
            <summary>
            Event that fires when the cache client is disconnected from a cache host.
            </summary>
        </member>
        <member name="E:Dache.Client.ICacheClient.HostReconnected">
            <summary>
            Event that fires when the cache client is successfully reconnected to a disconnected cache host.
            </summary>
        </member>
        <member name="M:Dache.Client.CacheClient.#ctor(Dache.Client.Serialization.IBinarySerializer,Dache.Core.Logging.ILogger)">
            <summary>
            The constructor.
            </summary>
            <param name="binarySerializer">The custom binary serializer to use. Pass null to use the default serializer. NOTE: must be thread safe.</param>
            <param name="logger">The custom logger to use. Pass null to use the default logger. NOTE: must be thread safe.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.TryGet``1(System.String,``0@)">
            <summary>
            Gets the object stored at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value or default for that type if the method returns false.</param>
            <typeparam name="T">The expected type.</typeparam>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Dache.Client.CacheClient.GetMany``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the objects stored at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
            <typeparam name="T">The expected type.</typeparam>
            <returns>A list of the objects stored at the cache keys, or null if none were found.</returns>
        </member>
        <member name="M:Dache.Client.CacheClient.GetTagged``1(System.String)">
            <summary>
            Gets the objects stored at the given tag name from the cache.
            </summary>
            <param name="tagName">The tag name.</param>
            <typeparam name="T">The expected type.</typeparam>
            <returns>A list of the objects stored at the tag name, or null if none were found.</returns>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdate(System.String,System.Object)">
            <summary>
            Adds or updates an object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdate(System.String,System.Object,System.DateTimeOffset)">
            <summary>
            Adds or updates an object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdate(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds or updates an object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateMany(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Adds or updates many objects in the cache at their given cache keys.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateMany(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.DateTimeOffset)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateMany(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.TimeSpan)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateTagged(System.String,System.Object,System.String)">
            <summary>
            Adds or updates an object in the cache at the given cache key with the associated tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateTagged(System.String,System.Object,System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates an object in the cache at the given cache key with the associated tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateTagged(System.String,System.Object,System.String,System.TimeSpan)">
            <summary>
            Adds or updates an object in the cache at the given cache key with the associated tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="value">The value.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateManyTagged(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys with the associated tag name.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateManyTagged(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys with the associated tag name.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.AddOrUpdateManyTagged(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String,System.TimeSpan)">
            <summary>
            Adds or updates many objects in the cache at their given cache keys with the associated tag name.
            </summary>
            <param name="cacheKeysAndObjects">The cache keys and their associated objects.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.Remove(System.String)">
            <summary>
            Removes the object at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.RemoveMany(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the objects at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.RemoveTagged(System.String)">
            <summary>
            Removes the objects associated to the given tag name from the cache.
            </summary>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.OnClientDisconnected(System.Object,System.EventArgs)">
            <summary>
            Triggered when a client is disconnected from a cache host.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.OnClientReconnected(System.Object,System.EventArgs)">
            <summary>
            Triggered when a client is reconnected from a cache host.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Dache.Client.CacheClient.CalculateCacheHostLoadBalancingDistribution">
            <summary>
            Calculates the cache host load balancing distribution by considering the average object count across all hosts as well as the cached object count 
            at each of the hosts.
            </summary>
        </member>
        <member name="M:Dache.Client.CacheClient.DetermineClient(System.String)">
            <summary>
            Determines the cache host client based on the cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <returns>The cache host client.</returns>
        </member>
        <member name="M:Dache.Client.CacheClient.ComputeHashCode(System.String)">
            <summary>
            Computes an integer hash code for a cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Dache.Client.CacheClient.BinarySearch(System.Int32)">
            <summary>
            Binary searches the cache host load balancing distribution for the index of the matching cache host.
            </summary>
            <param name="hashCode">The hash code.</param>
            <returns>A negative value if no cache host applies, otherwise the index of the cache host.</returns>
        </member>
        <member name="M:Dache.Client.CacheClient.BinarySearchRecursive(System.Int32,System.Int32)">
            <summary>
            Recursively binary searches the cache host load balancing distribution for the index of the matching cache host.
            </summary>
            <param name="hashCode">The hash code.</param>
            <param name="currentIndex">The current index.</param>
            <returns>A negative value if no cache host applies, otherwise the index of the cache host.</returns>
        </member>
        <member name="M:Dache.Client.CacheClient.CreateNetTcpBinding">
            <summary>
            Creates a configured net tcp binding for communication.
            </summary>
            <returns>A configured net tcp binding.</returns>
        </member>
        <member name="E:Dache.Client.CacheClient.HostDisconnected">
            <summary>
            Event that fires when the cache client is disconnected from a cache host.
            </summary>
        </member>
        <member name="E:Dache.Client.CacheClient.HostReconnected">
            <summary>
            Event that fires when the cache client is successfully reconnected to a disconnected cache host.
            </summary>
        </member>
        <member name="T:Dache.Client.CacheClient.CacheHostBucket">
            <summary>
            Provides cache host and bucket range information
            </summary>
        </member>
        <member name="P:Dache.Client.CacheClient.CacheHostBucket.CacheHost">
            <summary>
            The cache host.
            </summary>
        </member>
        <member name="P:Dache.Client.CacheClient.CacheHostBucket.MinValue">
            <summary>
            The minimum value of the range.
            </summary>
        </member>
        <member name="P:Dache.Client.CacheClient.CacheHostBucket.MaxValue">
            <summary>
            The maximum value of the range.
            </summary>
        </member>
        <member name="T:Dache.Client.CommunicationClient">
            <summary>
            Encapsulates a WCF cache host client.
            </summary>
        </member>
        <member name="M:Dache.Client.CommunicationClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Int32)">
            <summary>
            The constructor.
            </summary>
            <param name="binding">The binding.</param>
            <param name="endpointAddress">The endpoint address.</param>
            <param name="hostReconnectIntervalMilliseconds">The cache host reconnect interval, in milliseconds.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.Get(System.String)">
            <summary>
            Gets the serialized object stored at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <returns>The serialized object.</returns>
        </member>
        <member name="M:Dache.Client.CommunicationClient.GetMany(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Gets the serialized objects stored at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
            <param name="isClientRequest">Whether or not the request is from a client.</param> 
            <returns>A list of the serialized objects.</returns>
        </member>
        <member name="M:Dache.Client.CommunicationClient.GetTagged(System.String,System.Boolean)">
            <summary>
            Gets all serialized objects associated with the given tag name.
            </summary>
            <param name="tagName">The tag name.</param>
            <param name="isClientRequest">Whether or not the request is from a client.</param>
            <returns>A list of the serialized objects.</returns>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdate(System.String,System.Byte[])">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdate(System.String,System.Byte[],System.DateTimeOffset)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdate(System.String,System.Byte[],System.TimeSpan)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}})">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.DateTimeOffset)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.TimeSpan)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateTagged(System.String,System.Byte[],System.String)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key and associates it with the given tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateTagged(System.String,System.Byte[],System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key and associates it with the given tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateTagged(System.String,System.Byte[],System.String,System.TimeSpan)">
            <summary>
            Adds or updates a serialized object in the cache at the given cache key and associates it with the given tag name.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <param name="serializedObject">The serialized object.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateManyTagged(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.String)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="tagName">The tag name.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateManyTagged(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.String,System.DateTimeOffset)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="tagName">The tag name.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.AddOrUpdateManyTagged(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Byte[]}},System.String,System.TimeSpan)">
            <summary>
            Adds or updates the serialized objects in the cache at the given cache keys.
            </summary>
            <param name="cacheKeysAndSerializedObjects">The cache keys and associated serialized objects.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="tagName">The tag name.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.Remove(System.String)">
            <summary>
            Removes the serialized object at the given cache key from the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.RemoveMany(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the serialized objects at the given cache keys from the cache.
            </summary>
            <param name="cacheKeys">The cache keys.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.RemoveTagged(System.String,System.Boolean)">
            <summary>
            Removes all serialized objects associated with the given tag name.
            </summary>
            <param name="tagName">The tag name.</param>
            <param name="isClientRequest">Whether or not the request is from a client.</param>
        </member>
        <member name="M:Dache.Client.CommunicationClient.ToString">
            <summary>
            Outputs a human-friendly cache host address and port.
            </summary>
            <returns>A string containing the cache host address and port.</returns>
        </member>
        <member name="M:Dache.Client.CommunicationClient.DisconnectFromServer">
            <summary>
            Makes the client enter the disconnected state.
            </summary>
        </member>
        <member name="M:Dache.Client.CommunicationClient.ReconnectToServer(System.Object)">
            <summary>
            Connects or reconnects to the server.
            </summary>
            <param name="state">The state. Ignored but required for timer callback methods. Pass null.</param>
        </member>
        <member name="E:Dache.Client.CommunicationClient.Disconnected">
            <summary>
            Event that fires when the cache client is disconnected from a cache host.
            </summary>
        </member>
        <member name="E:Dache.Client.CommunicationClient.Reconnected">
            <summary>
            Event that fires when the cache client is successfully reconnected to a disconnected cache host.
            </summary>
        </member>
    </members>
</doc>
